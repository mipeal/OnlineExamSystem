@model EntityModels.ViewModel.OrganizationVM.OrganizationCreateVm
@{
    ViewBag.Title = "Organization Entry";
}
<div class="page-heading">
    <h1 class="page-title">Organization Entry</h1>
</div>
<div class="page-content fade-in-up">
    <div class="row">
        <div class="col-md-6">
            <div class="ibox">
                <div class="ibox-head">
                    <div class="ibox-title">Entry Form</div>
                    <div class="ibox-tools">
                        <a class="ibox-collapse"><i class="fa fa-minus"></i></a>
                        <a class="fullscreen-link"><i class="fa fa-expand"></i></a>
                    </div>
                </div>
                <div class="ibox-body">
                    <form class="form-horizontal" method="post"  enctype = "multipart/form-data">  
                        @Html.ValidationSummary(true, null, htmlAttributes: new { @class = "alert alert-danger" ,@role="alert"})
                        @if (ViewBag.Message == "Saved")
                        {
                            <div class="alert alert-success" role="alert">
                                Organization has been saved succesfully!
                            </div>
                        }
                        else if (ViewBag.Message == "Exist")
                        {
                            <div class="alert alert-warning" role="alert">
                               Organization already exist!
                            </div>
                        }
                        @Html.AntiForgeryToken()
                        <div class="form-group row">
                            @Html.LabelFor(c => c.Name,  htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(c => c.Name, htmlAttributes: new { @class = "form-control", @placeholder = "Name" })
                                @Html.ValidationMessageFor(c => c.Name, null, htmlAttributes: new { @class = "text-muted text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(c => c.Code, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(c => c.Code, htmlAttributes: new { @class = "form-control", @placeholder = "Code" })
                                @Html.ValidationMessageFor(c => c.Code, null, htmlAttributes: new { @class = "text-muted text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(c => c.Address,  htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(c => c.Address, htmlAttributes: new { @class = "form-control", @placeholder = "Address" })
                                @Html.ValidationMessageFor(c => c.Address, null, htmlAttributes: new { @class = "text-muted text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(c => c.ContactNo,"Contact No.",  htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(c => c.ContactNo, htmlAttributes: new { @class = "form-control", @placeholder = "Contact No." })
                                @Html.ValidationMessageFor(c => c.ContactNo, null, htmlAttributes: new { @class = "text-muted text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(c => c.About,  htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                            <div class="col-sm-9">
                                @Html.TextAreaFor(c => c.About, htmlAttributes: new { @class = "form-control", @placeholder = "About",@rows="4" })
                                @Html.ValidationMessageFor(c => c.About, null, htmlAttributes: new { @class = "text-muted text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(c => c.Logo,  htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                            <div class="col-sm-9">
                                <input type="file" name="uploadImage" id="uploadImage"/>
                                @Html.ValidationMessageFor(c => c.Logo, null, htmlAttributes: new { @class = "text-muted text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-9 ml-sm-auto">
                                <input type="submit" value="Save" class="btn btn-primary" />
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>