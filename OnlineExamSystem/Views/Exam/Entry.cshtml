@model EntityModels.ViewModel.ExamVM.ExamCreateVm

@{
    ViewBag.Title = "Exam Entry";
}

<div class="page-heading">
    <h1 class="page-title">Exam Entry</h1>
</div>
<div class="page-content fade-in-up">
    <div class="row">
        <div class="col-md-6">
            <div class="ibox">
                <div class="ibox-head">
                    <div class="ibox-title">Entry Form</div>
                    <div class="ibox-tools">
                        <a class="ibox-collapse"><i class="fa fa-minus"></i></a>
                        <a class="fullscreen-link"><i class="fa fa-expand"></i></a>
                    </div>
                </div>
                <div class="ibox-body">
                    <form class="form-horizontal" method="post">
                        @Html.ValidationSummary(true, null, htmlAttributes: new { @class = "alert alert-danger", @role = "alert" })
                        @if (ViewBag.Message == "Saved")
                        {
                            <div class="alert alert-success" role="alert">
                                You exam has been successfully entered!
                            </div>
                        }
                        else if (ViewBag.Message == "Failed")
                        {
                            <div class="alert alert-warning" role="alert">
                                Please! Try again later!
                            </div>
                        }
                        @Html.AntiForgeryToken()
                        <div class="form-group row">
                            @Html.Label("OrganizationId", "Organization", htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                            <div class="col-sm-9">
                                @Html.DropDownList("OrganizationId", Model.OrganizationSelectListItems, "Select Course", htmlAttributes: new { @class = "form-control", @id = "OrganizationDD" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(c => c.CourseId, "Course", htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                            <div class="col-sm-9">
                                <select id="CourseId" name="CourseId"class="form-control"><option value="">Select Course</option></select>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(c => c.Serial, "Serial", htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(c => c.Serial, htmlAttributes: new { @class = "form-control", @placeholder = "Auto Generated Serial", @readonly = "true" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(c => c.Code, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(c => c.Code, htmlAttributes: new { @class = "form-control", @placeholder = "Name" })
                                @Html.ValidationMessageFor(c => c.Code, null, htmlAttributes: new { @class = "text-muted text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(c => c.Topic, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(c => c.Topic, htmlAttributes: new { @class = "form-control", @placeholder = "Credit" })
                                @Html.ValidationMessageFor(c => c.Topic, null, htmlAttributes: new { @class = "text-muted text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(c => c.ExamType, "Type", htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                            <div class="col-sm-9">
                                @Html.DropDownListFor(c => c.ExamType, Model.ExamTypeSelectListItems, "Select Type", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(c => c.ExamType, null, htmlAttributes: new { @class = "text-muted text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(c => c.Duration, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                            <div class="col-sm-9">
                                <div id="ExamDuration"></div>
                                @Html.ValidationMessageFor(c => c.Duration, null, htmlAttributes: new { @class = "text-muted text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(c => c.FullMark, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                            <div class="col-sm-9">
                                @Html.TextBoxFor(c => c.FullMark, htmlAttributes: new { @class = "form-control", @placeholder = "Credit" })
                                @Html.ValidationMessageFor(c => c.FullMark, null, htmlAttributes: new { @class = "text-muted text-danger" })
                            </div>
                        </div>
                        <div class="hidden" id="inputHiddenValue">
                            @Html.TextBoxFor(c => c.Duration, htmlAttributes: new { @class = "hidden", @type = "hidden",@id="Duration" })
                            @Html.TextBoxFor(c => c.CourseId, htmlAttributes: new { @class = "hidden", type = "hidden" ,@id="ExamCourseId"})
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-9 ml-sm-auto">
                                <input type="submit" value="Save" class="btn btn-primary" id="ExamSave" />
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script src="~/Scripts/jquery-2.2.4.min.js"></script>
    <script src="~/Scripts/AppScripts/TimePicker/jquery.timesetter.js"></script>
    <script src="~/Scripts/AppScripts/ExamDetail.js"></script>
    <script>
        /*

On page load call the below code

*/

        $(document).ready(function () {

            $("#ExamDuration").timesetter().setValuesByTotalMinutes(30);

        });
    </script>
}

@section styles{
    <link href="~/Content/TimePicker/jquery.timesetter.css" rel="stylesheet" />
}